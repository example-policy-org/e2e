name: CI

on:
  push:
  pull_request:

jobs:
  deploy:
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     env: 
    #       - dev
    #       - preprod
    #       - prod

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: engineerd/setup-kind@v0.5.0

      - name: Install kyverno
        run: |
          kubectl apply --wait -k kyverno-install
          kubectl wait --for=condition=available --timeout=600s -n kyverno deployment/kyverno

      - name: Test
        # if: matrix.env == 'dev'
        run: |
          kubectl apply -k "github.com/example-policy-org/policy/kubernetes/kyverno?ref=1.0.0"
          kubectl apply -k "github.com/example-policy-org/policy/kubernetes/kyverno?ref=2.0.0"
          kubectl apply -k "github.com/example-policy-org/policy/kubernetes/kyverno?ref=2.0.1"
          while [[ $(kubectl get -k "github.com/example-policy-org/policy/kubernetes/kyverno?ref=1.0.0" -o 'jsonpath={..status.ready}') != "true" ]]; do sleep 1; done
          while [[ $(kubectl get -k "github.com/example-policy-org/policy/kubernetes/kyverno?ref=2.0.0" -o 'jsonpath={..status.ready}') != "true true" ]]; do sleep 1; done
          while [[ $(kubectl get -k "github.com/example-policy-org/policy/kubernetes/kyverno?ref=2.0.1" -o 'jsonpath={..status.ready}') != "true true" ]]; do sleep 1; done

          kubectl apply -k github.com/example-policy-org/app1
          kubectl apply -k github.com/example-policy-org/app2
          kubectl apply -k github.com/example-policy-org/app3

          kubectl wait --for=condition=available --timeout=600s deployment/app1 deployment/app2 deployment/app3